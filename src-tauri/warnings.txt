warning: unused import: `std::collections::HashMap`
 --> src\services\gmail\compose_service.rs:8:5
  |
8 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `GmailTokens`
  --> src\services\gmail\compose_service.rs:14:62
   |
14 | use crate::services::gmail::auth_service::{GmailAuthService, GmailTokens};
   |                                                              ^^^^^^^^^^^

warning: unused import: `EmailAttachment`
  --> src\services\gmail\compose_service.rs:15:57
   |
15 | use crate::services::gmail::api_service::{EmailAddress, EmailAttachment};
   |                                                         ^^^^^^^^^^^^^^^

warning: unused imports: `AuthConfig`, `AuthorizationRequest`, `CallbackResult`, `GmailTokenResponse`, `GmailTokens`, `StoredGmailAccount`, and `UserInfo`
  --> src\services\gmail\mod.rs:7:5
   |
7  |     AuthConfig,
   |     ^^^^^^^^^^
8  |     AuthorizationRequest,
   |     ^^^^^^^^^^^^^^^^^^^^
9  |     GmailTokenResponse,
   |     ^^^^^^^^^^^^^^^^^^
10 |     GmailTokens,
   |     ^^^^^^^^^^^
11 |     UserInfo,
   |     ^^^^^^^^
12 |     StoredGmailAccount,
   |     ^^^^^^^^^^^^^^^^^^
13 |     CallbackResult,
   |     ^^^^^^^^^^^^^^

warning: unused imports: `EmailAttachment`, `GmailApiService`, `GmailLabel`, `GmailThread`, `MessageSearchQuery`, and `MessageSearchResult`
  --> src\services\gmail\mod.rs:17:5
   |
17 |     GmailApiService,
   |     ^^^^^^^^^^^^^^^
18 |     GmailMessage,
19 |     GmailLabel,
   |     ^^^^^^^^^^
20 |     GmailThread,
   |     ^^^^^^^^^^^
...
23 |     EmailAttachment,
   |     ^^^^^^^^^^^^^^^
24 |     ProcessedGmailMessage,
25 |     MessageSearchQuery,
   |     ^^^^^^^^^^^^^^^^^^
26 |     MessageSearchResult,
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused imports: `ComposeAttachment`, `ComposeRequest`, `DeliveryInfo`, `DraftResponse`, `DraftSaveRequest`, `GmailComposeService`, `MessageImportance`, `MessageTemplate`, `ReplyRequest`, `ReplyType`, `SendResponse`, `SendStatus`, and `TemplateVariable`
  --> src\services\gmail\mod.rs:30:5
   |
30 |     GmailComposeService,
   |     ^^^^^^^^^^^^^^^^^^^
31 |     ComposeRequest,
   |     ^^^^^^^^^^^^^^
32 |     ComposeAttachment,
   |     ^^^^^^^^^^^^^^^^^
33 |     MessageImportance,
   |     ^^^^^^^^^^^^^^^^^
34 |     SendResponse,
   |     ^^^^^^^^^^^^
35 |     SendStatus,
   |     ^^^^^^^^^^
36 |     DeliveryInfo,
   |     ^^^^^^^^^^^^
37 |     DraftSaveRequest,
   |     ^^^^^^^^^^^^^^^^
38 |     DraftResponse,
   |     ^^^^^^^^^^^^^
39 |     MessageTemplate,
   |     ^^^^^^^^^^^^^^^
40 |     TemplateVariable,
   |     ^^^^^^^^^^^^^^^^
41 |     ReplyRequest,
   |     ^^^^^^^^^^^^
42 |     ReplyType,
   |     ^^^^^^^^^

warning: unused import: `crate::database::connection::DatabaseManager`
  --> src\lib.rs:45:5
   |
45 | use crate::database::connection::DatabaseManager;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `expected_state`
   --> src\commands\secure_oauth_flow.rs:280:9
    |
280 |         expected_state: String,
    |         ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_expected_state`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `tx`
   --> src\commands\secure_oauth_flow.rs:389:25
    |
389 |             if let Some(tx) = callback_sender.take() {
    |                         ^^ help: if this is intentional, prefix it with an underscore: `_tx`

warning: unused variable: `secure_storage`
   --> src\commands\secure_token_commands.rs:184:19
    |
184 |         if let Ok(secure_storage) = GmailTokenSecureStorage::new(&user_id) {
    |                   ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_secure_storage`

warning: unused variable: `old_access_encrypted`
   --> src\commands\secure_token_commands.rs:295:43
    |
295 |             Ok((id, email, name, picture, old_access_encrypted, old_refresh_encrypted, 
    |                                           ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_old_access_encrypted`

warning: unused variable: `old_refresh_encrypted`
   --> src\commands\secure_token_commands.rs:295:65
    |
295 |             Ok((id, email, name, picture, old_access_encrypted, old_refresh_encrypted, 
    |                                                                 ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_old_refresh_encrypted`

warning: unused variable: `is_active`
   --> src\commands\secure_token_commands.rs:296:29
    |
296 |                 expires_at, is_active, last_sync_at, created_at, updated_at, user_id)) => {
    |                             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_is_active`

warning: unused variable: `account_id`
   --> src\commands\sync_manager.rs:386:5
    |
386 |     account_id: &str,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_account_id`

warning: unused variable: `db_manager`
   --> src\commands\sync_manager.rs:388:5
    |
388 |     db_manager: &State<'_, DatabaseManager>,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_db_manager`

warning: unused variable: `now`
   --> src\services\gmail\auth_service.rs:213:17
    |
213 |             let now = SystemTime::now();
    |                 ^^^ help: if this is intentional, prefix it with an underscore: `_now`

warning: unused variable: `account_id`
   --> src\services\gmail\compose_service.rs:485:39
    |
485 |     pub async fn get_templates(&self, account_id: &str) -> Result<Vec<MessageTemplate>> {
    |                                       ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_account_id`

warning: unused variable: `account_id`
   --> src\services\gmail\compose_service.rs:492:41
    |
492 |     pub async fn create_template(&self, account_id: &str, template: &MessageTemplate) -> Result<String> {
    |                                         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_account_id`

warning: unused variable: `template`
   --> src\services\gmail\compose_service.rs:492:59
    |
492 |     pub async fn create_template(&self, account_id: &str, template: &MessageTemplate) -> Result<String> {
    |                                                           ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_template`

warning: unused variable: `compose`
   --> src\services\gmail\compose_service.rs:638:9
    |
638 |         compose: &ComposeRequest,
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_compose`

warning: unused variable: `draft_request`
   --> src\services\gmail\compose_service.rs:650:9
    |
650 |         draft_request: &DraftSaveRequest,
    |         ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_draft_request`

warning: unused variable: `compose`
   --> src\services\gmail\compose_service.rs:670:9
    |
670 |         compose: &ComposeRequest,
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_compose`

warning: unused variable: `account_id`
   --> src\services\gmail\compose_service.rs:680:40
    |
680 |     async fn get_cached_message(&self, account_id: &str, message_id: &str) -> Result<CachedMessage> {
    |                                        ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_account_id`

warning: unused variable: `message_id`
   --> src\services\gmail\compose_service.rs:680:58
    |
680 |     async fn get_cached_message(&self, account_id: &str, message_id: &str) -> Result<CachedMessage> {
    |                                                          ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_message_id`

warning: unused import: `rand::RngCore`
  --> src\utils\crypto.rs:16:5
   |
16 | use rand::RngCore as _;
   |     ^^^^^^^^^^^^^

warning: unused variable: `reencrypt_fn`
   --> src\commands\secure_token_storage.rs:140:30
    |
140 |     pub fn rotate_key(&self, reencrypt_fn: impl Fn(&str) -> Result<()>) -> Result<()> {
    |                              ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_reencrypt_fn`

warning: field `sender` is never read
   --> src\commands\gmail.rs:119:9
    |
117 | pub struct OAuthState {
    |            ---------- field in this struct
118 |     pub verifier: PkceCodeVerifier,
119 |     pub sender: oneshot::Sender<Result<String>>,
    |         ^^^^^^
    |
    = note: `OAuthState` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis
    = note: `#[warn(dead_code)]` on by default

warning: field `config` is never read
   --> src\commands\gmail.rs:126:9
    |
125 | pub struct GmailService {
    |            ------------ field in this struct
126 |     pub config: GmailConfig,
    |         ^^^^^^
    |
    = note: `GmailService` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: associated items `derive_key_from_password`, `delete_key`, and `rotate_key` are never used
   --> src\commands\secure_token_storage.rs:68:12
    |
30  | impl SecureTokenStorage {
    | ----------------------- associated items in this implementation
...
68  |     pub fn derive_key_from_password(password: &str, salt: &SaltString) -> Result<[u8; 32]> {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
133 |     pub fn delete_key(&self) -> Result<()> {
    |            ^^^^^^^^^^
...
140 |     pub fn rotate_key(&self, reencrypt_fn: impl Fn(&str) -> Result<()>) -> Result<()> {
    |            ^^^^^^^^^^

warning: field `oauth_callback_sender` is never read
  --> src\commands\secure_oauth_flow.rs:72:5
   |
68 | pub struct SecureOAuthService {
   |            ------------------ field in this struct
...
72 |     oauth_callback_sender: Arc<RwLock<Option<oneshot::Sender<OAuthCallbackResult>>>>,
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: method `wait_for_oauth_callback` is never used
   --> src\commands\secure_oauth_flow.rs:366:18
    |
75  | impl SecureOAuthService {
    | ----------------------- method in this implementation
...
366 |     pub async fn wait_for_oauth_callback(&self, timeout_ms: u64) -> Result<OAuthCallbackResult> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^

warning: function `init_oauth_service` is never used
   --> src\commands\secure_oauth_flow.rs:481:8
    |
481 | pub fn init_oauth_service(app: &AppHandle) -> Result<()> {
    |        ^^^^^^^^^^^^^^^^^^

warning: field `next_page_token` is never read
  --> src\commands\sync_manager.rs:67:5
   |
64 | struct GmailHistoryResponse {
   |        -------------------- field in this struct
...
67 |     next_page_token: Option<String>,
   |     ^^^^^^^^^^^^^^^
   |
   = note: `GmailHistoryResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `id` and `messages` are never read
  --> src\commands\sync_manager.rs:74:5
   |
73 | struct GmailHistoryRecord {
   |        ------------------ fields in this struct
74 |     id: String,
   |     ^^
75 |     messages: Option<Vec<GmailHistoryMessage>>,
   |     ^^^^^^^^
   |
   = note: `GmailHistoryRecord` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `thread_id` is never read
  --> src\commands\sync_manager.rs:90:5
   |
87 | struct GmailHistoryMessage {
   |        ------------------- field in this struct
...
90 |     thread_id: String,
   |     ^^^^^^^^^
   |
   = note: `GmailHistoryMessage` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `pending` and `processing` are never read
   --> src\commands\rate_limiter.rs:101:9
    |
100 | pub struct RequestQueue {
    |            ------------ fields in this struct
101 |     pub pending: VecDeque<BatchRequest>,
    |         ^^^^^^^
102 |     pub processing: HashMap<String, BatchRequest>,
    |         ^^^^^^^^^^
    |
    = note: `RequestQueue` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `last_quota_check` is never read
   --> src\commands\rate_limiter.rs:127:9
    |
123 | pub struct RateLimiter {
    |            ----------- field in this struct
...
127 |     pub last_quota_check: Instant,
    |         ^^^^^^^^^^^^^^^^
    |
    = note: `RateLimiter` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: associated function `new` is never used
   --> src\commands\gmail_attachments.rs:158:12
    |
157 | impl AttachmentService {
    | ---------------------- associated function in this implementation
158 |     pub fn new(storage_path: PathBuf) -> Self {
    |            ^^^

warning: method `get_db_path` is never used
   --> src\database\connection.rs:127:12
    |
22  | impl DatabaseManager {
    | -------------------- method in this implementation
...
127 |     pub fn get_db_path(&self) -> &PathBuf {
    |            ^^^^^^^^^^^

warning: associated function `new` is never used
   --> src\database\models.rs:336:12
    |
335 | impl GmailAccount {
    | ----------------- associated function in this implementation
336 |     pub fn new(
    |            ^^^

warning: associated function `new` is never used
   --> src\database\models.rs:382:12
    |
381 | impl GmailLabel {
    | --------------- associated function in this implementation
382 |     pub fn new(
    |            ^^^

warning: associated function `new` is never used
   --> src\database\models.rs:428:12
    |
427 | impl GmailThread {
    | ---------------- associated function in this implementation
428 |     pub fn new(id: String, account_id: String) -> Self {
    |            ^^^

warning: associated function `new` is never used
   --> src\database\models.rs:478:12
    |
477 | impl GmailMessage {
    | ----------------- associated function in this implementation
478 |     pub fn new(
    |            ^^^

warning: associated function `new` is never used
   --> src\database\models.rs:531:12
    |
530 | impl GmailAttachment {
    | -------------------- associated function in this implementation
531 |     pub fn new(
    |            ^^^

warning: associated function `new` is never used
   --> src\database\models.rs:576:12
    |
575 | impl GmailSyncState {
    | ------------------- associated function in this implementation
576 |     pub fn new(
    |            ^^^

warning: associated function `new` is never used
   --> src\database\models.rs:622:12
    |
621 | impl GmailDraft {
    | --------------- associated function in this implementation
622 |     pub fn new(
    |            ^^^

warning: function `cache_link_suggestion` is never used
   --> src\database\operations_v4.rs:339:14
    |
339 | pub async fn cache_link_suggestion(suggestion: &LinkSuggestion) -> Result<()> {
    |              ^^^^^^^^^^^^^^^^^^^^^

warning: function `cleanup_link_suggestions` is never used
   --> src\database\schema_v4.rs:355:8
    |
355 | pub fn cleanup_link_suggestions(conn: &Connection) -> Result<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `get_link_statistics` is never used
   --> src\database\schema_v4.rs:365:8
    |
365 | pub fn get_link_statistics(conn: &Connection, user_id: &str) -> Result<LinkStatistics> {
    |        ^^^^^^^^^^^^^^^^^^^

warning: struct `LinkStatistics` is never constructed
   --> src\database\schema_v4.rs:419:12
    |
419 | pub struct LinkStatistics {
    |            ^^^^^^^^^^^^^^
    |
    = note: `LinkStatistics` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: function `cleanup_old_sync_states` is never used
   --> src\database\schema_v5.rs:587:8
    |
587 | pub fn cleanup_old_sync_states(conn: &Connection, account_id: &str) -> Result<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^

warning: function `get_gmail_account_stats` is never used
   --> src\database\schema_v5.rs:603:8
    |
603 | pub fn get_gmail_account_stats(conn: &Connection, account_id: &str) -> Result<GmailAccountStats> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `GmailAccountStats` is never constructed
   --> src\database\schema_v5.rs:636:12
    |
636 | pub struct GmailAccountStats {
    |            ^^^^^^^^^^^^^^^^^
    |
    = note: `GmailAccountStats` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: function `run_onboarding_migration` is never used
 --> src\database\schema_onboarding.rs:9:8
  |
9 | pub fn run_onboarding_migration(conn: &Connection) -> Result<()> {
  |        ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_onboarding_indexes` is never used
  --> src\database\schema_onboarding.rs:79:4
   |
79 | fn create_onboarding_indexes(conn: &Connection) -> Result<()> {
   |    ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_onboarding_triggers` is never used
   --> src\database\schema_onboarding.rs:122:4
    |
122 | fn create_onboarding_triggers(conn: &Connection) -> Result<()> {
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `get_onboarding_status` is never used
   --> src\database\schema_onboarding.rs:157:8
    |
157 | pub fn get_onboarding_status(conn: &Connection, user_id: &str) -> Result<Option<OnboardingStatus>> {
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: function `update_onboarding_status` is never used
   --> src\database\schema_onboarding.rs:189:8
    |
189 | pub fn update_onboarding_status(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `OnboardingStatus` is never constructed
   --> src\database\schema_onboarding.rs:221:12
    |
221 | pub struct OnboardingStatus {
    |            ^^^^^^^^^^^^^^^^
    |
    = note: `OnboardingStatus` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: struct `SyncOperations` is never constructed
 --> src\database\sync_operations.rs:6:12
  |
6 | pub struct SyncOperations;
  |            ^^^^^^^^^^^^^^

warning: multiple associated functions are never used
   --> src\database\sync_operations.rs:10:12
    |
8   | impl SyncOperations {
    | ------------------- associated functions in this implementation
9   |     /// Store multiple messages in batch
10  |     pub fn store_messages(
    |            ^^^^^^^^^^^^^^
...
27  |     pub fn store_message(
    |            ^^^^^^^^^^^^^
...
36  |     fn store_message_internal(
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
173 |     pub fn store_history(
    |            ^^^^^^^^^^^^^
...
199 |     pub fn store_push_subscription(
    |            ^^^^^^^^^^^^^^^^^^^^^^^
...
236 |     pub fn remove_push_subscription(conn: &Connection, account_id: &str) -> Result<()> {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
245 |     pub fn update_message_labels(
    |            ^^^^^^^^^^^^^^^^^^^^^
...
303 |     pub fn delete_messages(
    |            ^^^^^^^^^^^^^^^
...
322 |     pub fn get_last_history_id(conn: &Connection, account_id: &str) -> Result<Option<String>> {
    |            ^^^^^^^^^^^^^^^^^^^
...
337 |     pub fn update_sync_timestamp(conn: &Connection, account_id: &str) -> Result<()> {
    |            ^^^^^^^^^^^^^^^^^^^^^
...
351 |     fn parse_email_address(address: &str) -> (String, String) {
    |        ^^^^^^^^^^^^^^^^^^^
...
363 |     fn extract_body(message: &serde_json::Value) -> (String, String) {
    |        ^^^^^^^^^^^^
...
375 |     fn extract_body_recursive(
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
413 |     fn has_attachments(message: &serde_json::Value) -> bool {
    |        ^^^^^^^^^^^^^^^
...
421 |     fn has_attachments_recursive(part: &serde_json::Value) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
442 |     pub fn get_sync_stats(conn: &Connection, account_id: &str) -> Result<SyncStats> {
    |            ^^^^^^^^^^^^^^

warning: function `decode` is never used
   --> src\database\sync_operations.rs:484:12
    |
484 |     pub fn decode(input: &str) -> Result<Vec<u8>, String> {
    |            ^^^^^^

warning: associated items `new`, `with_user_id`, `with_account_id`, `with_session_id`, and `with_metadata` are never used
   --> src\errors\mod.rs:128:12
    |
127 | impl ErrorContext {
    | ----------------- associated items in this implementation
128 |     pub fn new(operation: &str, component: &str) -> Self {
    |            ^^^
...
140 |     pub fn with_user_id(mut self, user_id: &str) -> Self {
    |            ^^^^^^^^^^^^
...
145 |     pub fn with_account_id(mut self, account_id: &str) -> Self {
    |            ^^^^^^^^^^^^^^^
...
150 |     pub fn with_session_id(mut self, session_id: &str) -> Self {
    |            ^^^^^^^^^^^^^^^
...
155 |     pub fn with_metadata(mut self, key: &str, value: &str) -> Self {
    |            ^^^^^^^^^^^^^

warning: associated items `new` and `with_location` are never used
   --> src\errors\mod.rs:170:12
    |
169 | impl ContextualError {
    | -------------------- associated items in this implementation
170 |     pub fn new(error: LibreOllamaError, context: ErrorContext) -> Self {
    |            ^^^
...
178 |     pub fn with_location(mut self, location: &str) -> Self {
    |            ^^^^^^^^^^^^^

warning: methods `is_retryable`, `retry_delay_ms`, `user_message`, and `category` are never used
   --> src\errors\mod.rs:353:12
    |
351 | impl LibreOllamaError {
    | --------------------- methods in this implementation
352 |     /// Check if error is retryable
353 |     pub fn is_retryable(&self) -> bool {
    |            ^^^^^^^^^^^^
...
364 |     pub fn retry_delay_ms(&self) -> Option<u64> {
    |            ^^^^^^^^^^^^^^
...
374 |     pub fn user_message(&self) -> String {
    |            ^^^^^^^^^^^^
...
399 |     pub fn category(&self) -> &'static str {
    |            ^^^^^^^^

warning: function `generate_nonce` is never used
  --> src\utils\crypto.rs:20:8
   |
20 | pub fn generate_nonce() -> [u8; 12] {
   |        ^^^^^^^^^^^^^^

warning: function `generate_salt` is never used
  --> src\utils\crypto.rs:27:8
   |
27 | pub fn generate_salt() -> SaltString {
   |        ^^^^^^^^^^^^^

warning: function `derive_key_from_password` is never used
  --> src\utils\crypto.rs:32:8
   |
32 | pub fn derive_key_from_password(password: &str, salt: &SaltString) -> Result<[u8; 32]> {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `encrypt_data` is never used
  --> src\utils\crypto.rs:61:8
   |
61 | pub fn encrypt_data(data: &str, key: &[u8; 32]) -> Result<String> {
   |        ^^^^^^^^^^^^

warning: function `decrypt_data` is never used
  --> src\utils\crypto.rs:84:8
   |
84 | pub fn decrypt_data(encrypted_data: &str, key: &[u8; 32]) -> Result<String> {
   |        ^^^^^^^^^^^^

warning: function `hash_data` is never used
   --> src\utils\crypto.rs:120:8
    |
120 | pub fn hash_data(data: &str) -> String {
    |        ^^^^^^^^^

warning: function `generate_secure_token` is never used
   --> src\utils\crypto.rs:128:8
    |
128 | pub fn generate_secure_token(length: usize) -> String {
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: function `constant_time_eq` is never used
   --> src\utils\crypto.rs:135:8
    |
135 | pub fn constant_time_eq(a: &str, b: &str) -> bool {
    |        ^^^^^^^^^^^^^^^^

warning: function `generate_secure_id` is never used
   --> src\utils\crypto.rs:149:8
    |
149 | pub fn generate_secure_id() -> String {
    |        ^^^^^^^^^^^^^^^^^^

warning: function `secure_zero` is never used
   --> src\utils\crypto.rs:154:8
    |
154 | pub fn secure_zero(data: &mut [u8]) {
    |        ^^^^^^^^^^^

warning: function `validate_encryption_key` is never used
   --> src\utils\crypto.rs:164:8
    |
164 | pub fn validate_encryption_key(key: &str) -> Result<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^

warning: associated functions `new` and `with_name` are never used
  --> src\utils\email.rs:19:12
   |
18 | impl EmailAddress {
   | ----------------- associated functions in this implementation
19 |     pub fn new(email: &str) -> Result<Self> {
   |            ^^^
...
29 |     pub fn with_name(email: &str, name: &str) -> Result<Self> {
   |            ^^^^^^^^^

warning: function `validate_email_address` is never used
  --> src\utils\email.rs:89:8
   |
89 | pub fn validate_email_address(email: &str) -> Result<()> {
   |        ^^^^^^^^^^^^^^^^^^^^^^

warning: function `parse_email_address` is never used
   --> src\utils\email.rs:147:8
    |
147 | pub fn parse_email_address(input: &str) -> Result<EmailAddress> {
    |        ^^^^^^^^^^^^^^^^^^^

warning: function `parse_email_address_list` is never used
   --> src\utils\email.rs:182:8
    |
182 | pub fn parse_email_address_list(input: &str) -> Result<Vec<EmailAddress>> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `format_email_address_list` is never used
   --> src\utils\email.rs:229:8
    |
229 | pub fn format_email_address_list(addresses: &[EmailAddress]) -> String {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `html_to_text` is never used
   --> src\utils\email.rs:238:8
    |
238 | pub fn html_to_text(html: &str) -> String {
    |        ^^^^^^^^^^^^

warning: function `generate_message_id` is never used
   --> src\utils\email.rs:281:8
    |
281 | pub fn generate_message_id(domain: &str) -> String {
    |        ^^^^^^^^^^^^^^^^^^^

warning: function `validate_email_subject` is never used
   --> src\utils\email.rs:288:8
    |
288 | pub fn validate_email_subject(subject: &str) -> Result<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^^

warning: function `extract_domain` is never used
   --> src\utils\email.rs:310:8
    |
310 | pub fn extract_domain(email: &str) -> Result<String> {
    |        ^^^^^^^^^^^^^^

warning: function `is_from_domain` is never used
   --> src\utils\email.rs:325:8
    |
325 | pub fn is_from_domain(email: &str, domain: &str) -> bool {
    |        ^^^^^^^^^^^^^^

warning: function `normalize_email_address` is never used
   --> src\utils\email.rs:332:8
    |
332 | pub fn normalize_email_address(email: &str) -> Result<String> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `RateLimiter` is never constructed
 --> src\utils\rate_limit.rs:8:12
  |
8 | pub struct RateLimiter {
  |            ^^^^^^^^^^^

warning: associated items `new` and `check_rate_limit` are never used
  --> src\utils\rate_limit.rs:15:12
   |
14 | impl RateLimiter {
   | ---------------- associated items in this implementation
15 |     pub fn new(requests_per_minute: u32) -> Self {
   |            ^^^
...
23 |     pub fn check_rate_limit(&mut self) -> bool {
   |            ^^^^^^^^^^^^^^^^

warning: function `validate_non_empty_string` is never used
  --> src\utils\validation.rs:10:8
   |
10 | pub fn validate_non_empty_string(value: &str, field_name: &str) -> Result<()> {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `validate_string_length` is never used
  --> src\utils\validation.rs:21:8
   |
21 | pub fn validate_string_length(value: &str, field_name: &str, min: usize, max: usize) -> Result<()> {
   |        ^^^^^^^^^^^^^^^^^^^^^^

warning: function `validate_numeric_range` is never used
  --> src\utils\validation.rs:34:8
   |
34 | pub fn validate_numeric_range<T>(value: T, field_name: &str, min: T, max: T) -> Result<()>
   |        ^^^^^^^^^^^^^^^^^^^^^^

warning: function `validate_url` is never used
  --> src\utils\validation.rs:49:8
   |
49 | pub fn validate_url(url: &str, field_name: &str) -> Result<()> {
   |        ^^^^^^^^^^^^

warning: function `validate_json_string` is never used
  --> src\utils\validation.rs:73:8
   |
73 | pub fn validate_json_string(json_str: &str, field_name: &str) -> Result<()> {
   |        ^^^^^^^^^^^^^^^^^^^^

warning: function `validate_file_path` is never used
  --> src\utils\validation.rs:83:8
   |
83 | pub fn validate_file_path(path: &std::path::Path, field_name: &str) -> Result<()> {
   |        ^^^^^^^^^^^^^^^^^^

warning: function `validate_directory_path` is never used
   --> src\utils\validation.rs:102:8
    |
102 | pub fn validate_directory_path(path: &std::path::Path, field_name: &str) -> Result<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^

warning: function `validate_array_length` is never used
   --> src\utils\validation.rs:121:8
    |
121 | pub fn validate_array_length<T>(array: &[T], field_name: &str, min: usize, max: usize) -> Result<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: function `sanitize_string` is never used
   --> src\utils\validation.rs:134:8
    |
134 | pub fn sanitize_string(input: &str) -> String {
    |        ^^^^^^^^^^^^^^^

warning: function `validate_filename` is never used
   --> src\utils\validation.rs:142:8
    |
142 | pub fn validate_filename(filename: &str, field_name: &str) -> Result<String> {
    |        ^^^^^^^^^^^^^^^^^

warning: function `validate_email` is never used
   --> src\utils\validation.rs:182:8
    |
182 | pub fn validate_email(email: &str, field_name: &str) -> Result<()> {
    |        ^^^^^^^^^^^^^^

warning: function `format_timestamp` is never used
 --> src\utils\time.rs:8:8
  |
8 | pub fn format_timestamp(timestamp: &DateTime<Utc>) -> String {
  |        ^^^^^^^^^^^^^^^^

warning: function `parse_rfc3339` is never used
  --> src\utils\time.rs:13:8
   |
13 | pub fn parse_rfc3339(timestamp: &str) -> Result<DateTime<Utc>, String> {
   |        ^^^^^^^^^^^^^

warning: function `current_timestamp` is never used
  --> src\utils\time.rs:20:8
   |
20 | pub fn current_timestamp() -> String {
   |        ^^^^^^^^^^^^^^^^^

warning: function `parse_naive_datetime` is never used
  --> src\utils\time.rs:25:8
   |
25 | pub fn parse_naive_datetime(datetime_str: &str) -> Result<NaiveDateTime, String> {
   |        ^^^^^^^^^^^^^^^^^^^^

warning: function `time_ago` is never used
  --> src\utils\time.rs:31:8
   |
31 | pub fn time_ago(timestamp: &DateTime<Utc>) -> String {
   |        ^^^^^^^^

warning: struct `SimpleCache` is never constructed
 --> src\utils\cache.rs:9:12
  |
9 | pub struct SimpleCache<K, V> {
  |            ^^^^^^^^^^^

warning: associated items `new`, `insert`, `get`, `remove`, `clear`, and `cleanup_expired` are never used
  --> src\utils\cache.rs:19:12
   |
14 | / impl<K, V> SimpleCache<K, V>
15 | | where
16 | |     K: std::hash::Hash + Eq + Clone,
17 | |     V: Clone,
   | |_____________- associated items in this implementation
18 |   {
19 |       pub fn new(ttl: Duration) -> Self {
   |              ^^^
...
26 |       pub fn insert(&mut self, key: K, value: V) {
   |              ^^^^^^
...
30 |       pub fn get(&mut self, key: &K) -> Option<V> {
   |              ^^^
...
45 |       pub fn remove(&mut self, key: &K) -> Option<V> {
   |              ^^^^^^
...
49 |       pub fn clear(&mut self) {
   |              ^^^^^
...
53 |       pub fn cleanup_expired(&mut self) {
   |              ^^^^^^^^^^^^^^^

warning: function `is_port_available` is never used
 --> src\utils\networking.rs:8:8
  |
8 | pub fn is_port_available(port: u16) -> bool {
  |        ^^^^^^^^^^^^^^^^^

warning: function `find_available_port` is never used
  --> src\utils\networking.rs:16:8
   |
16 | pub fn find_available_port(start: u16, end: u16) -> Option<u16> {
   |        ^^^^^^^^^^^^^^^^^^^

warning: function `http_get_with_timeout` is never used
  --> src\utils\networking.rs:26:14
   |
26 | pub async fn http_get_with_timeout(url: &str, timeout_secs: u64) -> Result<String> {
   |              ^^^^^^^^^^^^^^^^^^^^^

warning: associated functions `get_env_var`, `get_optional_env_var`, and `get_env_var_as` are never used
   --> src\config\mod.rs:257:12
    |
194 | impl EnvConfig {
    | -------------- associated functions in this implementation
...
257 |     pub fn get_env_var(key: &str) -> Result<String> {
    |            ^^^^^^^^^^^
...
264 |     pub fn get_optional_env_var(key: &str) -> Option<String> {
    |            ^^^^^^^^^^^^^^^^^^^^
...
269 |     pub fn get_env_var_as<T>(key: &str) -> Result<T>
    |            ^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src\config\mod.rs:353:12
    |
345 | impl ConfigManager {
    | ------------------ associated items in this implementation
...
353 |     pub fn with_config(config: AppConfig) -> Self {
    |            ^^^^^^^^^^^
...
358 |     pub fn config(&self) -> &AppConfig {
    |            ^^^^^^
...
368 |     pub fn database(&self) -> &DatabaseConfig {
    |            ^^^^^^^^
...
373 |     pub fn gmail(&self) -> &GmailConfig {
    |            ^^^^^
...
378 |     pub fn sync(&self) -> &SyncConfig {
    |            ^^^^
...
383 |     pub fn security(&self) -> &SecurityConfig {
    |            ^^^^^^^^
...
388 |     pub fn paths(&self) -> &PathConfig {
    |            ^^^^^
...
393 |     pub fn ensure_directories(&self) -> Result<()> {
    |            ^^^^^^^^^^^^^^^^^^

warning: struct `Services` is never constructed
  --> src\services\mod.rs:43:12
   |
43 | pub struct Services; 
   |            ^^^^^^^^

warning: struct `GmailServices` is never constructed
  --> src\services\gmail\mod.rs:71:12
   |
71 | pub struct GmailServices; 
   |            ^^^^^^^^^^^^^

warning: constant `GMAIL_SCOPES` is never used
  --> src\services\gmail\auth_service.rs:28:7
   |
28 | const GMAIL_SCOPES: &[&str] = &[
   |       ^^^^^^^^^^^^

warning: constant `GMAIL_AUTH_URL` is never used
  --> src\services\gmail\auth_service.rs:37:7
   |
37 | const GMAIL_AUTH_URL: &str = "https://accounts.google.com/o/oauth2/v2/auth";
   |       ^^^^^^^^^^^^^^

warning: constant `GMAIL_TOKEN_URL` is never used
  --> src\services\gmail\auth_service.rs:38:7
   |
38 | const GMAIL_TOKEN_URL: &str = "https://oauth2.googleapis.com/token";
   |       ^^^^^^^^^^^^^^^

warning: constant `GMAIL_REVOKE_URL` is never used
  --> src\services\gmail\auth_service.rs:39:7
   |
39 | const GMAIL_REVOKE_URL: &str = "https://oauth2.googleapis.com/revoke";
   |       ^^^^^^^^^^^^^^^^

warning: constant `GMAIL_USERINFO_URL` is never used
  --> src\services\gmail\auth_service.rs:40:7
   |
40 | const GMAIL_USERINFO_URL: &str = "https://www.googleapis.com/oauth2/v2/userinfo";
   |       ^^^^^^^^^^^^^^^^^^

warning: fields `verifier`, `csrf_token`, and `created_at` are never read
   --> src\services\gmail\auth_service.rs:106:5
    |
105 | struct PendingAuthorization {
    |        -------------------- fields in this struct
106 |     verifier: PkceCodeVerifier,
    |     ^^^^^^^^
107 |     csrf_token: CsrfToken,
    |     ^^^^^^^^^^
108 |     created_at: SystemTime,
    |     ^^^^^^^^^^
    |
    = note: `PendingAuthorization` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `config`, `pending_authorizations`, `callback_sender`, `db_manager`, and `encryption_key` are never read
   --> src\services\gmail\auth_service.rs:116:5
    |
115 | pub struct GmailAuthService {
    |            ---------------- fields in this struct
116 |     config: AuthConfig,
    |     ^^^^^^
117 |     pending_authorizations: Arc<RwLock<HashMap<String, PendingAuthorization>>>,
    |     ^^^^^^^^^^^^^^^^^^^^^^
118 |     callback_sender: Arc<RwLock<Option<oneshot::Sender<CallbackResult>>>>,
    |     ^^^^^^^^^^^^^^^
119 |     db_manager: Arc<DatabaseManager>,
    |     ^^^^^^^^^^
120 |     encryption_key: [u8; 32],
    |     ^^^^^^^^^^^^^^

warning: multiple methods are never used
   --> src\services\gmail\auth_service.rs:156:8
    |
123 | impl GmailAuthService {
    | --------------------- methods in this implementation
...
156 |     fn create_oauth_client(&self, redirect_uri: &str) -> Result<BasicClient> {
    |        ^^^^^^^^^^^^^^^^^^^
...
184 |     pub async fn start_authorization(&self, redirect_uri: Option<String>) -> Result<AuthorizationRequest> {
    |                  ^^^^^^^^^^^^^^^^^^^
...
227 |     pub async fn complete_authorization(
    |                  ^^^^^^^^^^^^^^^^^^^^^^
...
278 |     pub async fn refresh_token(
    |                  ^^^^^^^^^^^^^
...
308 |     pub async fn get_user_info(&self, access_token: &str) -> Result<UserInfo> {
    |                  ^^^^^^^^^^^^^
...
340 |     pub async fn store_account_tokens(
    |                  ^^^^^^^^^^^^^^^^^^^^
...
401 |     pub async fn get_account_tokens(&self, account_id: &str) -> Result<Option<GmailTokens>> {
    |                  ^^^^^^^^^^^^^^^^^^
...
454 |     pub async fn revoke_token(&self, token: String) -> Result<()> {
    |                  ^^^^^^^^^^^^
...
477 |     pub async fn get_user_accounts(&self, user_id: &str) -> Result<Vec<StoredGmailAccount>> {
    |                  ^^^^^^^^^^^^^^^^^
...
520 |     pub async fn remove_account(&self, account_id: &str) -> Result<()> {
    |                  ^^^^^^^^^^^^^^
...
551 |     pub async fn is_token_valid(&self, account_id: &str) -> Result<bool> {
    |                  ^^^^^^^^^^^^^^
...
570 |     pub async fn validate_and_refresh_tokens(&self, _db_manager: &std::sync::Arc<DatabaseManager>, account_id: &str) -> Result<GmailToken...
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
654 |     pub async fn update_sync_timestamp(&self, account_id: &str) -> Result<()> {
    |                  ^^^^^^^^^^^^^^^^^^^^^

warning: constant `GMAIL_API_BASE` is never used
  --> src\services\gmail\api_service.rs:16:7
   |
16 | const GMAIL_API_BASE: &str = "https://gmail.googleapis.com/gmail/v1";
   |       ^^^^^^^^^^^^^^

warning: struct `GmailApiService` is never constructed
   --> src\services\gmail\api_service.rs:163:12
    |
163 | pub struct GmailApiService {
    |            ^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src\services\gmail\api_service.rs:171:12
    |
169 | impl GmailApiService {
    | -------------------- associated items in this implementation
170 |     /// Create a new Gmail API service
171 |     pub fn new(
    |            ^^^
...
183 |     async fn make_api_request<T>(&self, account_id: &str, endpoint: &str) -> Result<T>
    |              ^^^^^^^^^^^^^^^^
...
221 |     pub async fn get_labels(&self, account_id: &str) -> Result<Vec<GmailLabel>> {
    |                  ^^^^^^^^^^
...
230 |     pub async fn get_messages(
    |                  ^^^^^^^^^^^^
...
268 |     pub async fn get_message(&self, account_id: &str, message_id: &str) -> Result<GmailMessage> {
    |                  ^^^^^^^^^^^
...
274 |     pub async fn get_parsed_message(
    |                  ^^^^^^^^^^^^^^^^^^
...
294 |     pub async fn get_thread(&self, account_id: &str, thread_id: &str) -> Result<Vec<ProcessedGmailMessage>> {
    |                  ^^^^^^^^^^
...
323 |     pub async fn search_messages(
    |                  ^^^^^^^^^^^^^^^
...
351 |     pub async fn get_attachment(
    |                  ^^^^^^^^^^^^^^
...
380 |     fn parse_gmail_message(&self, gmail_message: &GmailMessage) -> Result<ParsedEmail> {
    |        ^^^^^^^^^^^^^^^^^^^
...
404 |     fn parse_raw_email(&self, raw_content: &str, message_id: &str, thread_id: &str) -> Result<ParsedEmail> {
    |        ^^^^^^^^^^^^^^^
...
444 |     fn parse_gmail_payload(&self, payload: &GmailPayload, message_id: &str, thread_id: &str) -> Result<ParsedEmail> {
    |        ^^^^^^^^^^^^^^^^^^^
...
479 |     fn extract_gmail_headers(&self, headers: &[GmailHeader]) -> HashMap<String, String> {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
487 |     fn extract_headers_from_raw(&self, raw_content: &str) -> Result<HashMap<String, String>> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
520 |     fn extract_body_from_raw(&self, raw_content: &str) -> Result<(Option<String>, Option<String>)> {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
534 |     fn extract_gmail_content(&self, payload: &GmailPayload) -> Result<(Option<String>, Option<String>, Vec<EmailAttachment>)> {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
545 |     fn extract_gmail_parts_recursive(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
607 |     fn parse_address(&self, addr_str: &str) -> Result<EmailAddress> {
    |        ^^^^^^^^^^^^^
...
637 |     fn parse_optional_address(&self, addr_str: &str) -> Result<Option<EmailAddress>> {
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
646 |     fn parse_address_list(&self, addr_list: &str) -> Vec<EmailAddress> {
    |        ^^^^^^^^^^^^^^^^^^
...
660 |     fn split_address_list(&self, addr_list: &str) -> Vec<String> {
    |        ^^^^^^^^^^^^^^^^^^
...
704 |     pub fn html_to_text(&self, html: &str) -> String {
    |            ^^^^^^^^^^^^

warning: fields `data` and `size` are never read
   --> src\services\gmail\api_service.rs:364:13
    |
363 |         struct AttachmentResponse {
    |                ------------------ fields in this struct
364 |             data: String,
    |             ^^^^
365 |             size: Option<i32>,
    |             ^^^^

warning: constant `GMAIL_SEND_ENDPOINT` is never used
  --> src\services\gmail\compose_service.rs:18:7
   |
18 | const GMAIL_SEND_ENDPOINT: &str = "https://gmail.googleapis.com/gmail/v1/users/me/messages/send";
   |       ^^^^^^^^^^^^^^^^^^^

warning: constant `GMAIL_DRAFTS_ENDPOINT` is never used
  --> src\services\gmail\compose_service.rs:19:7
   |
19 | const GMAIL_DRAFTS_ENDPOINT: &str = "https://gmail.googleapis.com/gmail/v1/users/me/drafts";
   |       ^^^^^^^^^^^^^^^^^^^^^

warning: struct `GmailComposeService` is never constructed
   --> src\services\gmail\compose_service.rs:145:12
    |
145 | pub struct GmailComposeService {
    |            ^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src\services\gmail\compose_service.rs:153:12
    |
151 | impl GmailComposeService {
    | ------------------------ associated items in this implementation
152 |     /// Create a new Gmail compose service
153 |     pub fn new(
    |            ^^^
...
165 |     pub async fn send_message(&self, compose_request: &ComposeRequest) -> Result<SendResponse> {
    |                  ^^^^^^^^^^^^
...
231 |     pub async fn save_draft(&self, draft_request: &DraftSaveRequest) -> Result<DraftResponse> {
    |                  ^^^^^^^^^^
...
298 |     pub async fn get_drafts(
    |                  ^^^^^^^^^^
...
370 |     pub async fn delete_draft(&self, account_id: &str, draft_id: &str) -> Result<()> {
    |                  ^^^^^^^^^^^^
...
404 |     pub async fn schedule_message(
    |                  ^^^^^^^^^^^^^^^^
...
425 |     pub async fn create_reply(&self, reply_request: &ReplyRequest) -> Result<ComposeRequest> {
    |                  ^^^^^^^^^^^^
...
485 |     pub async fn get_templates(&self, account_id: &str) -> Result<Vec<MessageTemplate>> {
    |                  ^^^^^^^^^^^^^
...
492 |     pub async fn create_template(&self, account_id: &str, template: &MessageTemplate) -> Result<String> {
    |                  ^^^^^^^^^^^^^^^
...
499 |     fn format_email_message(&self, compose: &ComposeRequest) -> Result<Vec<u8>> {
    |        ^^^^^^^^^^^^^^^^^^^^
...
583 |     fn format_address_list(&self, addresses: &[EmailAddress]) -> String {
    |        ^^^^^^^^^^^^^^^^^^^
...
592 |     fn format_address(&self, address: &EmailAddress) -> String {
    |        ^^^^^^^^^^^^^^
...
601 |     fn format_reply_subject(&self, original_subject: &str, reply_type: &ReplyType) -> String {
    |        ^^^^^^^^^^^^^^^^^^^^
...
621 |     fn estimate_message_size(&self, compose: &ComposeRequest) -> u64 {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
636 |     async fn store_sent_message(
    |              ^^^^^^^^^^^^^^^^^^
...
648 |     async fn store_draft_locally(
    |              ^^^^^^^^^^^^^^^^^^^
...
660 |     async fn remove_draft_locally(&self, account_id: &str, draft_id: &str) -> Result<()> {
    |              ^^^^^^^^^^^^^^^^^^^^
...
668 |     async fn store_scheduled_message(
    |              ^^^^^^^^^^^^^^^^^^^^^^^
...
680 |     async fn get_cached_message(&self, account_id: &str, message_id: &str) -> Result<CachedMessage> {
    |              ^^^^^^^^^^^^^^^^^^

warning: field `drafts` is never read
   --> src\services\gmail\compose_service.rs:345:13
    |
344 |         struct DraftListResponse {
    |                ----------------- field in this struct
345 |             drafts: Option<Vec<serde_json::Value>>,
    |             ^^^^^^

warning: struct `CachedMessage` is never constructed
   --> src\services\gmail\compose_service.rs:703:8
    |
703 | struct CachedMessage {
    |        ^^^^^^^^^^^^^

warning: comparison is useless due to type limits
   --> src\config\mod.rs:305:49
    |
305 |         if config.oauth.callback_port < 1024 || config.oauth.callback_port > 65535 {
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_comparisons)]` on by default

warning: `tauri-app` (lib) generated 133 warnings (run `cargo fix --lib -p tauri-app` to apply 7 suggestions)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.53s
